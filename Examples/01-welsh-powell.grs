(Gratch (Graph Nodes Edges)
	((for Graph (c2 color cur mode (list colors))
	      ((when loop
		 ((doIf (equal:to: (getVar mode) 1)
			((setVar:to: cur (nodeWithMax: degrees))
			 (doIf (not: (equal:to: (getColorOfNode: (getVar cur)) (colorWhite)))
			       ((stopAll)))
			 (setVar:to: color (getLine:ofList: 1 colors))
			 (setColor:node: (getVar color) (getVar cur))
			 (deleteLine:ofList: 1 colors)
			 (setVar:to: c2 0)
			 (setVar:to: mode 2)
			 (stopThread)))
		  (doIf (equal:to: (getVar mode) 2)
			((setVar:to: mode 3)
			 (stopThread)))
		  (doIf (equal:to: (getVar mode) 3)
			((setVar:to: c2 (nodeWithMax: d2))
			 (doIf (equal:to: (getNode:var: (getVar c2) d2) 0)
			       ((setVar:to: mode 1)))))))
	       (when startup
		 ((setVar:to: mode 1)
		  (clearList: colors)
		  (append:toList: (colorRed) colors)
		  (append:toList: (colorBlue) colors)
		  (append:toList: (colorGreen) colors)
		  (append:toList: (colorYellow) colors)
		  (append:toList: (colorOrange) colors)))))
	 (for Nodes ((list adjs) (var d2) (var degrees) (var n))
	      ((when loop
		 ((doIf (equal:to: (getGraphVar: mode) 2)
			((doIf (equal:to: (getId) (getGraphVar: cur))
			       ((setVar:to: degrees 0)))
			 (setVar:to: d2 (getVar degrees))))
		  (doIf (equal:to: (getGraphVar: mode) 3)
			((clearList: adjs)
			 (doIf (equal:to: (getId) (getGraphVar: c2))
			       ((setVar:to: d2 0)
				(adjacentNodesTo:into: (getGraphVar: c2) adjs)
				(doIf (more:than: (lineCountOfList: adjs) 0)
				      ((doUntil (equal:to: (lineCountOfList: adjs) 0)
						((setVar:to: n (getLine:ofList: 1 adjs))
						 (deleteLine:ofList: 1 adjs)
						 (doIf (equal:to: (getColorOfNode: (getVar n)) (getGraphVar: color))
						       ((stopThread)))))
				       (setColor: (getGraphVar: color))
				       (setVar:to: degrees 0)))))))))
	       (when setup
		 ((setVar:to: degrees (degrees))
		  (setColor: (colorWhite))))))
	 (for Edges ()
	      ())))
